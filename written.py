# -*- coding: utf-8 -*-
"""written.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WTCXatmHGbn8CCKNQuCIUiKRxRN3JBAT
"""

import tensorflow as tf
mnist = tf.keras.datasets.mnist
(x_train,y_train),(x_test,y_test) = mnist.load_data()

x_train = tf.keras.utils.normalize(x_train,axis=0)
x_test = tf.keras.utils.normalize(x_test,axis=0)

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128,activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(128,activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(10,activation=tf.nn.softmax))


model.compile(
    optimizer = 'adam',
    loss = 'sparse_categorical_crossentropy',
    metrics = ['accuracy']
)


model.fit(x_train,y_train,epochs=3)
model.save('dodo.model')

val_loss, val_acc = model.evaluate(x_test,y_test)
print(val_loss)
print(val_acc)

new_model = tf.keras.models.load_model('dodo.model')
predicitons = new_model.predict([x_test])
import numpy as np
print(np.argmax(predicitons[0]))

import matplotlib.pyplot as plt
plt.imshow(x_train[8])
plt.show()
len(x_train)